//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.18051
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.18051에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace AdManagerClient.MediaRapServicePloxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MediaRapServiceSoap", Namespace="http://advmgt.hanafostv.com/AdManagerWebService/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseModel))]
    public partial class MediaRapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMediaRapListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMediaRapUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMediaRapCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMediaRapDeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MediaRapService() {
            this.Url = "http://localhost:8086/AdManagerWebserviceV5/Media/MediaRapService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMediaRapListCompletedEventHandler GetMediaRapListCompleted;
        
        /// <remarks/>
        public event SetMediaRapUpdateCompletedEventHandler SetMediaRapUpdateCompleted;
        
        /// <remarks/>
        public event SetMediaRapCreateCompletedEventHandler SetMediaRapCreateCompleted;
        
        /// <remarks/>
        public event SetMediaRapDeleteCompletedEventHandler SetMediaRapDeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://advmgt.hanafostv.com/AdManagerWebService/GetMediaRapList", RequestNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", ResponseNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaRapModel GetMediaRapList(HeaderModel header, MediaRapModel mediarapModel) {
            object[] results = this.Invoke("GetMediaRapList", new object[] {
                        header,
                        mediarapModel});
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediaRapList(HeaderModel header, MediaRapModel mediarapModel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediaRapList", new object[] {
                        header,
                        mediarapModel}, callback, asyncState);
        }
        
        /// <remarks/>
        public MediaRapModel EndGetMediaRapList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaRapListAsync(HeaderModel header, MediaRapModel mediarapModel) {
            this.GetMediaRapListAsync(header, mediarapModel, null);
        }
        
        /// <remarks/>
        public void GetMediaRapListAsync(HeaderModel header, MediaRapModel mediarapModel, object userState) {
            if ((this.GetMediaRapListOperationCompleted == null)) {
                this.GetMediaRapListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaRapListOperationCompleted);
            }
            this.InvokeAsync("GetMediaRapList", new object[] {
                        header,
                        mediarapModel}, this.GetMediaRapListOperationCompleted, userState);
        }
        
        private void OnGetMediaRapListOperationCompleted(object arg) {
            if ((this.GetMediaRapListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaRapListCompleted(this, new GetMediaRapListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://advmgt.hanafostv.com/AdManagerWebService/SetMediaRapUpdate", RequestNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", ResponseNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaRapModel SetMediaRapUpdate(HeaderModel header, MediaRapModel mediarapModel) {
            object[] results = this.Invoke("SetMediaRapUpdate", new object[] {
                        header,
                        mediarapModel});
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetMediaRapUpdate(HeaderModel header, MediaRapModel mediarapModel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetMediaRapUpdate", new object[] {
                        header,
                        mediarapModel}, callback, asyncState);
        }
        
        /// <remarks/>
        public MediaRapModel EndSetMediaRapUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public void SetMediaRapUpdateAsync(HeaderModel header, MediaRapModel mediarapModel) {
            this.SetMediaRapUpdateAsync(header, mediarapModel, null);
        }
        
        /// <remarks/>
        public void SetMediaRapUpdateAsync(HeaderModel header, MediaRapModel mediarapModel, object userState) {
            if ((this.SetMediaRapUpdateOperationCompleted == null)) {
                this.SetMediaRapUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMediaRapUpdateOperationCompleted);
            }
            this.InvokeAsync("SetMediaRapUpdate", new object[] {
                        header,
                        mediarapModel}, this.SetMediaRapUpdateOperationCompleted, userState);
        }
        
        private void OnSetMediaRapUpdateOperationCompleted(object arg) {
            if ((this.SetMediaRapUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMediaRapUpdateCompleted(this, new SetMediaRapUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://advmgt.hanafostv.com/AdManagerWebService/SetMediaRapCreate", RequestNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", ResponseNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaRapModel SetMediaRapCreate(HeaderModel header, MediaRapModel mediarapModel) {
            object[] results = this.Invoke("SetMediaRapCreate", new object[] {
                        header,
                        mediarapModel});
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetMediaRapCreate(HeaderModel header, MediaRapModel mediarapModel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetMediaRapCreate", new object[] {
                        header,
                        mediarapModel}, callback, asyncState);
        }
        
        /// <remarks/>
        public MediaRapModel EndSetMediaRapCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public void SetMediaRapCreateAsync(HeaderModel header, MediaRapModel mediarapModel) {
            this.SetMediaRapCreateAsync(header, mediarapModel, null);
        }
        
        /// <remarks/>
        public void SetMediaRapCreateAsync(HeaderModel header, MediaRapModel mediarapModel, object userState) {
            if ((this.SetMediaRapCreateOperationCompleted == null)) {
                this.SetMediaRapCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMediaRapCreateOperationCompleted);
            }
            this.InvokeAsync("SetMediaRapCreate", new object[] {
                        header,
                        mediarapModel}, this.SetMediaRapCreateOperationCompleted, userState);
        }
        
        private void OnSetMediaRapCreateOperationCompleted(object arg) {
            if ((this.SetMediaRapCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMediaRapCreateCompleted(this, new SetMediaRapCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://advmgt.hanafostv.com/AdManagerWebService/SetMediaRapDelete", RequestNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", ResponseNamespace="http://advmgt.hanafostv.com/AdManagerWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaRapModel SetMediaRapDelete(HeaderModel header, MediaRapModel mediarapModel) {
            object[] results = this.Invoke("SetMediaRapDelete", new object[] {
                        header,
                        mediarapModel});
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetMediaRapDelete(HeaderModel header, MediaRapModel mediarapModel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetMediaRapDelete", new object[] {
                        header,
                        mediarapModel}, callback, asyncState);
        }
        
        /// <remarks/>
        public MediaRapModel EndSetMediaRapDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MediaRapModel)(results[0]));
        }
        
        /// <remarks/>
        public void SetMediaRapDeleteAsync(HeaderModel header, MediaRapModel mediarapModel) {
            this.SetMediaRapDeleteAsync(header, mediarapModel, null);
        }
        
        /// <remarks/>
        public void SetMediaRapDeleteAsync(HeaderModel header, MediaRapModel mediarapModel, object userState) {
            if ((this.SetMediaRapDeleteOperationCompleted == null)) {
                this.SetMediaRapDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMediaRapDeleteOperationCompleted);
            }
            this.InvokeAsync("SetMediaRapDelete", new object[] {
                        header,
                        mediarapModel}, this.SetMediaRapDeleteOperationCompleted, userState);
        }
        
        private void OnSetMediaRapDeleteOperationCompleted(object arg) {
            if ((this.SetMediaRapDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMediaRapDeleteCompleted(this, new SetMediaRapDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://advmgt.hanafostv.com/AdManagerWebService/")]
    public partial class HeaderModel {
        
        private string clientKeyField;
        
        private string sysVersionField;
        
        private string userIDField;
        
        private string userLevelField;
        
        private string userClassField;
        
        private string userGroupField;
        
        /// <remarks/>
        public string ClientKey {
            get {
                return this.clientKeyField;
            }
            set {
                this.clientKeyField = value;
            }
        }
        
        /// <remarks/>
        public string SysVersion {
            get {
                return this.sysVersionField;
            }
            set {
                this.sysVersionField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserLevel {
            get {
                return this.userLevelField;
            }
            set {
                this.userLevelField = value;
            }
        }
        
        /// <remarks/>
        public string UserClass {
            get {
                return this.userClassField;
            }
            set {
                this.userClassField = value;
            }
        }
        
        /// <remarks/>
        public string UserGroup {
            get {
                return this.userGroupField;
            }
            set {
                this.userGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MediaRapModel))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://advmgt.hanafostv.com/AdManagerWebService/")]
    public partial class BaseModel {
        
        private string resultDescField;
        
        private int resultCntField;
        
        private string resultCDField;
        
        /// <remarks/>
        public string ResultDesc {
            get {
                return this.resultDescField;
            }
            set {
                this.resultDescField = value;
            }
        }
        
        /// <remarks/>
        public int ResultCnt {
            get {
                return this.resultCntField;
            }
            set {
                this.resultCntField = value;
            }
        }
        
        /// <remarks/>
        public string ResultCD {
            get {
                return this.resultCDField;
            }
            set {
                this.resultCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://advmgt.hanafostv.com/AdManagerWebService/")]
    public partial class MediaRapModel : BaseModel {
        
        private System.Data.DataSet mediaRapDataSetField;
        
        private string searchKeyField;
        
        private string searchMediaRapField;
        
        private string searchchkAdState_10Field;
        
        private string rapCodeField;
        
        private string rapNameField;
        
        private string rapTypeField;
        
        private string tellField;
        
        private string regDtField;
        
        private string commentField;
        
        private string useYnField;
        
        /// <remarks/>
        public System.Data.DataSet MediaRapDataSet {
            get {
                return this.mediaRapDataSetField;
            }
            set {
                this.mediaRapDataSetField = value;
            }
        }
        
        /// <remarks/>
        public string SearchKey {
            get {
                return this.searchKeyField;
            }
            set {
                this.searchKeyField = value;
            }
        }
        
        /// <remarks/>
        public string SearchMediaRap {
            get {
                return this.searchMediaRapField;
            }
            set {
                this.searchMediaRapField = value;
            }
        }
        
        /// <remarks/>
        public string SearchchkAdState_10 {
            get {
                return this.searchchkAdState_10Field;
            }
            set {
                this.searchchkAdState_10Field = value;
            }
        }
        
        /// <remarks/>
        public string RapCode {
            get {
                return this.rapCodeField;
            }
            set {
                this.rapCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RapName {
            get {
                return this.rapNameField;
            }
            set {
                this.rapNameField = value;
            }
        }
        
        /// <remarks/>
        public string RapType {
            get {
                return this.rapTypeField;
            }
            set {
                this.rapTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Tell {
            get {
                return this.tellField;
            }
            set {
                this.tellField = value;
            }
        }
        
        /// <remarks/>
        public string RegDt {
            get {
                return this.regDtField;
            }
            set {
                this.regDtField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string UseYn {
            get {
                return this.useYnField;
            }
            set {
                this.useYnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMediaRapListCompletedEventHandler(object sender, GetMediaRapListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaRapListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaRapListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaRapModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaRapModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetMediaRapUpdateCompletedEventHandler(object sender, SetMediaRapUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMediaRapUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMediaRapUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaRapModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaRapModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetMediaRapCreateCompletedEventHandler(object sender, SetMediaRapCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMediaRapCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMediaRapCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaRapModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaRapModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetMediaRapDeleteCompletedEventHandler(object sender, SetMediaRapDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMediaRapDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMediaRapDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaRapModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaRapModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591